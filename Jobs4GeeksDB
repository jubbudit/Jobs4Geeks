/* Drop tables according to their dependency */
DROP TABLE IF EXISTS FavoriteJobs, JobListing, CompanyPhoto, CompanyUser, UserFile, UserPhoto, CandidateUser;

CREATE TABLE CandidateUser 
(
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    first_name VARCHAR(128) NOT NULL,
    last_name VARCHAR(128) NOT NULL,
    username VARCHAR(128) NOT NULL,
    password VARCHAR(128) NOT NULL,
    security_question_number INT NOT NULL,   /* Refers to the number of the selected security question */
    security_answer VARCHAR(128) NOT NULL,
    current_position VARCHAR(128) NOT NULL,
    email VARCHAR(255) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE UserFile 
(
    id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT NOT NULL,
    user_id INT UNSIGNED,
    filename VARCHAR(255) NOT NULL,
    FOREIGN KEY (user_id) REFERENCES CandidateUser(id) ON DELETE CASCADE
);

CREATE TABLE UserPhoto 
(
    id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT NOT NULL,
    extension ENUM('jpeg', 'jpg', 'png', 'gif') NOT NULL,
    user_id INT UNSIGNED,
    FOREIGN KEY (user_id) REFERENCES CandidateUser(id) ON DELETE CASCADE
);

CREATE TABLE CompanyUser 
(
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL,
    username VARCHAR(128) NOT NULL,
    password VARCHAR(128) NOT NULL,
    security_question_number INT NOT NULL,   /* Refers to the number of the selected security question */
    security_answer VARCHAR(128) NOT NULL,
    description VARCHAR(1024) NOT NULL,
    home_url VARCHAR(255) NOT NULL,		/* URL of the company home page */
    PRIMARY KEY (id)
);

CREATE TABLE CompanyPhoto 
(
    id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT NOT NULL,
    extension ENUM('jpeg', 'jpg', 'png', 'gif') NOT NULL,
    company_id INT UNSIGNED,
    FOREIGN KEY (company_id) REFERENCES CompanyUser(id) ON DELETE CASCADE
);

CREATE TABLE JobListing 
(
    id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT NOT NULL,
    company_name VARCHAR(128) NOT NULL,
    company_id INT UNSIGNED,		/* References company that created posting, not required for API listings */
    title VARCHAR(255) NOT NULL,
    description VARCHAR(4096) NOT NULL,
    field VARCHAR(255) NOT NULL,
    application_url VARCHAR(255),	/* Not required for job listings created locally */
    FOREIGN KEY (company_id) REFERENCES CompanyUser(id) ON DELETE CASCADE
);

CREATE TABLE FavoriteJobs 
(
    id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT NOT NULL,
    user_id INT UNSIGNED,
    job INT NOT NULL,
    FOREIGN KEY (user_id) REFERENCES CandidateUser(id) ON DELETE CASCADE
);
